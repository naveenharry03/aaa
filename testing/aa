import os
from docx import Document
from docx.shared import Pt, RGBColor
from docx.enum.text import WD_ALIGN_PARAGRAPH
from docx.oxml.ns import qn
from docx.oxml import OxmlElement

def create_document_with_cover_and_toc(merged_docx_path, title, author):
    # Create a new document object
    doc = Document()

    # --- Cover Page ---
    # Add title
    title_paragraph = doc.add_paragraph()
    title_run = title_paragraph.add_run(title)
    title_run.bold = True
    title_run.font.size = Pt(28)
    title_paragraph.alignment = WD_ALIGN_PARAGRAPH.CENTER

    # Add space between title and author
    doc.add_paragraph().add_run("\n")

    # Add author name
    author_paragraph = doc.add_paragraph()
    author_run = author_paragraph.add_run(f"Author: {author}")
    author_run.font.size = Pt(16)
    author_paragraph.alignment = WD_ALIGN_PARAGRAPH.CENTER

    # Add page break after the cover page
    doc.add_page_break()

    # --- Table of Contents (TOC) ---
    add_toc(doc)

    # Add another page break after the TOC
    doc.add_page_break()

    # --- Merge Markdown Content ---
    merged_content = Document(merged_docx_path)
    for element in merged_content.element.body:
        doc.element.body.append(element)

    # Save the final document
    doc.save(merged_docx_path)

def add_toc(doc):
    """Adds a Table of Contents (TOC) to the document."""
    paragraph = doc.add_paragraph()
    run = paragraph.add_run("Table of Contents")
    run.bold = True
    run.font.size = Pt(20)
    paragraph.alignment = WD_ALIGN_PARAGRAPH.CENTER

    # Add TOC field
    p = doc.add_paragraph()
    fld_simple = OxmlElement('w:fldSimple')
    fld_simple.set(qn('w:instr'), 'TOC \\o "1-3" \\h \\z \\u')
    p._element.append(fld_simple)

# --- Usage ---
# Provide the path to your merged docx file
merged_docx_path = "merged_output.docx"
title = "My Project Documentation"
author = "John Doe"

# Create the document with cover page and TOC
create_document_with_cover_and_toc(merged_docx_path, title, author)
