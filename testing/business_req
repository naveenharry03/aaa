# Business Requirements Document  
## Project: [Project Name]  
## Version: [Version Number]  
## Date: [YYYY-MM-DD]  
## Author: [Your Name / Team]  
## Stakeholders: [Architects, Tech Leads, Business Analysts]  

---

## 1. Overview  
The **[Project Name]** is a **Streamlit UI application** that enables users to **[briefly describe the purpose, e.g., upload, validate, and store data]**.  
The application provides multiple pages for user interaction and automatic processing. The workflow includes:  

1. **[Starting Page]** – [Brief explanation of its role].  
2. **[Next Page]** – [How it connects to the next process].  
3. **[Processing Page]** – [What transformations occur here].  
4. **[Final Page]** – [End result and expected outcome].  

---

## 2. Functional Requirements  

### 2.1 Streamlit UI Pages  
The application consists of the following pages:  

- **<Page Name 1>:** [One-line page description]  
- **<Page Name 2>:** [One-line page description]  
- **<Page Name 3>:** [One-line page description]  

Each page contains specific functionalities and UI elements as detailed below.  

#### **2.1.1 <Page Name 1>**  
- [Describe the primary purpose of this page]  
- [List functionalities such as buttons, inputs, selections]  
- [Specify expected user interactions]  

#### **2.1.2 <Page Name 2>**  
- [Describe the primary purpose of this page]  
- [List functionalities such as buttons, inputs, selections]  
- [Specify expected user interactions]  

#### **2.1.3 <Page Name 3>**  
- [Describe the primary purpose of this page]  
- [List functionalities such as buttons, inputs, selections]  
- [Specify expected user interactions]  

---

## 2.2 Upload Page Requirements  
Users should be able to:  

- Upload a **CSV** or **XLSX** file.  
- Select the data source using a **radio button**:  
  - **Option 1:** Upload from the local machine.  
  - **Option 2:** Read from **Snowflake** (`schema.table_name`).  
- View the uploaded file in a **pandas DataFrame** format.  
- Click a **"Process Data"** button to trigger data validation.  

---

## 2.3 Algorithm Page (Data Validation & Cleaning)  
The uploaded dataset undergoes the following transformations:  

1. **Missing Value Handling:**  
   - If **numerical with outliers**, fill with `median`.  
   - If **numerical without outliers**, fill with `mean`.  
   - If **categorical**, fill with `mode`.  

2. **Data Type Validation:**  
   - Ensure all columns have **string data type only**.  

3. **Range Validation:**  
   - Verify numerical values fall within predefined acceptable ranges.  

4. **Date Validation:**  
   - Ensure date fields follow the correct format (`YYYY-MM-DD`).  

5. **Duplicate Removal:**  
   - Drop duplicate rows from the dataset.  

6. **Schema Mapping:**  
   - Ensure the cleaned dataset matches the **Snowflake schema** before insertion.  

7. **Storage Process:**  
   - Store the validated data in **Snowflake** (`schema.table_name`).  

---

## 3. Application Flow  

Below is the step-by-step process of the **Streamlit UI application**:  

1. **User lands on** `<Home Page>`, which provides an introduction.  
2. **User navigates to** `<Upload Page>` to upload a dataset.  
3. **User selects a data source** (local file or Snowflake database).  
4. **Upon file upload**, the data is displayed as a **pandas DataFrame**.  
5. **User clicks on** `"Process Data"` to trigger validation and transformation.  
6. **Application performs data cleaning, validation, and schema mapping**.  
7. **Validated data is stored in Snowflake**.  
8. **A final confirmation message is displayed to the user**.  

---

## 4. Assumptions & Constraints  

- The **Streamlit UI** application is expected to run on **[Specify Deployment Environment]**.  
- The **Snowflake schema** should be predefined and **not dynamically modified**.  
- Users must have **appropriate database permissions**.  
- The application is designed for **structured tabular data only**.  

---





Business Requirements Document

Project: Calculator

Version: 1.0

Date: 2025-02-18

Author: Team

Stakeholders: Architects, Tech Leads, Business Analysts

1. Overview

The Calculator is a Streamlit UI application that enables users to perform basic arithmetic operations, including addition, subtraction, multiplication, and division.

2. Functional Requirements

2.1 Streamlit UI Pages

The application consists of the following pages:

Home Page - Starting Page - Provides an introduction to the calculator application.

Operations Page - 2nd Page - Allows users to input numbers and select operations.

Results Page - 3rd Page - Displays the result of the performed calculations.

Exit Page - End Page - Provides an option to exit the application.

Each page contains specific functionalities and UI elements as detailed below.

2.1.1 Home Page Requirements

Provides an overview of the calculator's functionalities.

UI Element: Button - Navigates to the Operations Page.

2.1.2 Operations Page Requirements

Users can input two numerical values.

Users can select the desired arithmetic operation.

UI Element: Text Box - Used to enter the first number.

UI Element: Text Box - Used to enter the second number.

UI Element: Dropdown Menu - Used to choose between addition, subtraction, multiplication, or division.

UI Element: Button - Triggers the calculation process.

2.1.3 Results Page Requirements

Displays the calculated result based on user input.

UI Element: Text Field - Shows the computed result.

UI Element: Button - Performs another calculation by navigating back to the Operations Page.

2.1.4 Exit Page Requirements

Provides an option to exit the application.

UI Element: Button - Closes the application.

3. Application Flow Integration

Below is the step-by-step process of the Streamlit UI application:

User lands on Home Page, which provides an introduction.

User navigates to Operations Page to input numbers and select an operation.

User navigates to Results Page to view the calculated result.

User navigates to Exit Page to close the application or choose to perform another calculation.


